environment:
  SITE_HOME: "/opt/static-sites/${DOMAIN}"

tasks:
  default:
    labels:
      autorequire: "true"
    requires: [site, caddy, webhook]

  site:
    requires: [home, target-commit, ":docker"]
    script: ./build-site.sh
    when:
      check_fails: |
        test -f "${SITE_HOME}/LIVE_COMMIT"
        target_commit="$(cat "${SITE_HOME}/TARGET_COMMIT")"
        live_commit="$(cat "${SITE_HOME}/LIVE_COMMIT")"
        [ "$target_commit" == "$live_commit" ]

  target-commit:
    requires: [home]
    script: ./update-target-commit.sh
    when:
      check_fails: test -f "${SITE_HOME}/TARGET_COMMIT"

  caddy:
    extends: [":caddy:configure"]
    script: |
      FILE_SERVER_FLAGS="${FILE_SERVER_FLAGS:-}"
      export FILE_SERVER_FLAGS
      cat Caddyfile | envsubst > "${CADDY_CONF_DIR}/static-site-${DOMAIN}.caddyfile"

  webhook:
    extends: [":secrets:op", ":webhook:configure"]
    labels:
      secret.WEBHOOK_SECRET: "static-sites/${DOMAIN}:WEBHOOK_SECRET"
    script: |
      ./webhook-build.py

  home:
    script: |
      mkdir -p "${SITE_HOME}/live"
      mkdir -p "${SITE_HOME}/builds"
    when:
      check_fails: |
        test -d "${SITE_HOME}/live"
        test -d "${SITE_HOME}/builds"
