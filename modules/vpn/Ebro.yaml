environment:
  VPN_HOME: /opt/vpn

tasks:
  server:
    requires: [up]

  home-gateway:
    requires: [home-gateway-config, up]

  home-gateway-config:
    requires: [gen]
    required_by: [up]
    script: cp "${VPN_HOME}/home-gateway/wg0.conf" /etc/wireguard/wg0.conf
    when:
      check_fails: test -f /etc/wireguard/wg0.conf
      output_changes: cat "${VPN_HOME}/home-gateway/wg0.conf"

  up:
    requires: [ip-forwarding]
    labels:
      apt.packages: "wireguard"
    script: |
      chmod 600 /etc/wireguard/wg0.conf
      systemctl enable wg-quick@wg0
      systemctl start wg-quick@wg0
      wg syncconf wg0 <(wg-quick strip wg0)
    when:
      check_fails: systemctl status wg-quick@wg0
      output_changes: cat /etc/wireguard/wg0.conf

  gen:
    labels:
      apt.packages: "wireguard qrencode"
    script: ./gen.py
    when:
      check_fails: test -d "${VPN_HOME}"
      output_changes: cat gen.py

  reset:
    script: |
      wg-quick down wg0 || true
      systemctl stop wg-quick@wg0

  ip-forwarding:
    script: |
      printf "%s\n" "# configured by srkbz/infra" "net.ipv4.ip_forward=1" >>/etc/sysctl.conf
      sysctl -p
    when:
      check_fails: |
        cat /etc/sysctl.conf | grep -E '^net\.ipv4\.ip_forward *= *1$'
        [ "$(cat /proc/sys/net/ipv4/ip_forward)" == "1" ]
