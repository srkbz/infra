environment:
  CADDY_VERSION: "2.9.1"
  CADDY_CONF: /etc/caddy/Caddyfile
  CADDY_CONF_DIR: /etc/caddy/conf.d
  CADDY_CACHE_DIR: "${CACHE_DIR}/caddy"
  CADDY_DEB: "${CADDY_CACHE_DIR}/deb/${CADDY_VERSION}/caddy.deb"
  CADDY_DEB_URL: "https://github.com/caddyserver/caddy/releases/download/v${CADDY_VERSION}/caddy_${CADDY_VERSION}_linux_amd64.deb"

tasks:
  default:
    labels:
      autorequire: "true"
    requires: [conf, install]
    script: |
      cp Caddyfile "$CADDY_CONF"
      systemctl reload caddy
    when:
      output_changes: |
        cat Caddyfile
        cat "$CADDY_CONF_DIR"/* || true
      check_fails: |
        test -f "$CADDY_CONF"

  install:
    requires: [deb]
    script: |
      apt-get install -y --allow-downgrades "${CADDY_DEB}"
    when:
      check_fails: |
        command -v caddy
        actual_caddy_version="$(caddy --version)"
        [[ "$actual_caddy_version" == "v${CADDY_VERSION} "* ]]

  deb:
    script: |
      caddy_deb_dir="$(dirname "$CADDY_DEB")"
      mkdir -p "${caddy_deb_dir}"
      curl -L -o "${CADDY_DEB}" "${CADDY_DEB_URL}"
    when:
      check_fails: test -f "${CADDY_DEB}"

  conf:
    requires: [query: 'tasks | filter("caddy.conf" in .labels) | map(.id)']
    script: |
      mkdir -p "$CADDY_CONF_DIR"
      rm -rf "$CADDY_CONF_DIR"/*
      task_ids="$(cd "${EBRO_ROOT}" && "${EBRO_BIN}" -i --query 'tasks | filter("caddy.conf" in .labels) | map(.id) | join("\n")')"
      for task_id in ${task_ids}; do
        conf_file="$(cd "${EBRO_ROOT}" && "${EBRO_BIN}" -i --query "filter(tasks, .id == '${task_id}')[0].labels['caddy.conf']")"
        cp "$conf_file" "$CADDY_CONF_DIR/${task_id}.caddyfile"
      done
    when:
      check_fails: test -d "$CADDY_CONF_DIR"
      output_changes: |
        task_ids="$(cd "${EBRO_ROOT}" && "${EBRO_BIN}" -i --query 'tasks | filter("caddy.conf" in .labels) | map(.id) | join("\n")')"
        for task_id in ${task_ids}; do
          conf_file="$(cd "${EBRO_ROOT}" && "${EBRO_BIN}" -i --query "filter(tasks, .id == '${task_id}')[0].labels['caddy.conf']")"
          cat "$conf_file"
        done
