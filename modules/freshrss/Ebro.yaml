environment:
  FRESHRSS_HOME: ${STATE_DIR}/freshrss
  FRESHRSS_HOST: "${FRESHRSS_HOST:-127.0.0.1}"
  FRESHRSS_PORT: "${FRESHRSS_PORT:-random}"
  FRESHRSS_PORT_FILE: "${FRESHRSS_HOME}/PORT"

tasks:
  default:
    labels:
      autorequire: "true"
    requires: [":docker", home, port]
    script: |
      cp docker-compose.yml "${FRESHRSS_HOME}/docker-compose.yml"
      cd "${FRESHRSS_HOME}"
      port="$(cat "$FRESHRSS_PORT_FILE")"
      echo "PORT=${port}" > .env
      echo "HOST=${FRESHRSS_HOST}" >> .env
      docker compose up --detach --wait --remove-orphans
    when:
      output_changes: |
        cat docker-compose.yml
        cat "${FRESHRSS_PORT_FILE}"
      check_fails: |
        test -d "${FRESHRSS_HOME}"
        cd "${FRESHRSS_HOME}"
        test -f "docker-compose.yml"
        active_containers="$(docker compose ps -q)"
        [ "$active_containers" != "" ]

  port:
    extends: [":port-registry:reserve"]
    requires: [home]
    environment:
      PORT: "${FRESHRSS_PORT}"
      PORT_FILE: "${FRESHRSS_PORT_FILE}"

  home:
    script: mkdir -p "$FRESHRSS_HOME"
    when:
      check_fails: test -d "$FRESHRSS_HOME"

  backup:
    if_tasks_exist: [":restic"]
    labels:
      cron: "0 3 * * 0"
    extends: [":restic:operation"]
    script: |
      cd "${FRESHRSS_HOME}/data"
      restic-backup-here freshrss
