environment:
  STATE_DIR: "${EBRO_ROOT}/.state"
  CACHE_DIR: "${EBRO_ROOT}/.cache"
  DATA_DIR: "/data"

imports:
  utils: { from: "../../modules/utils" }
  apt: { from: "../../modules/apt" }
  discover: { from: "../../modules/discover" }
  base-dirs: { from: "../../modules/base-dirs" }
  wireguard: { from: "../../modules/wireguard" }
  vpn: { from: "../../modules/vpn" }
  cron: { from: "../../modules/cron" }
  docker: { from: "../../modules/docker" }
  dropbox: { from: "../../modules/dropbox" }

  freshrss:
    from: ../../modules/freshrss
    environment:
      FRESHRSS_HOST: "10.10.0.1"
      FRESHRSS_DATA: "${DATA_DIR}/apps/freshrss"

tasks:
  default:
    labels:
      apt.packages: "vim htop btop iftop iotop"
    requires: [discover]

  data-dir:
    labels:
      discover: "true"
    extends: [":utils:dir"]
    requires: [data-group]
    required_by: [base-dirs]
    environment:
      DIR: "${DATA_DIR}"
      PERM: "770"
      OWNERS: "${USER}:data"

  data-group:
    labels:
      discover: "true"
    extends: [":utils:group"]
    environment:
      NAME: data

  dropbox-user-in-data-group:
    labels:
      discover: "true"
    requires: [data-group, ":dropbox:user"]
    extends: [":utils:user-in-group"]
    environment:
      USER_NAME: dropbox
      GROUP_NAME: data

  freshrss-user-in-data-group:
    labels:
      discover: "true"
    requires: [data-group, ":freshrss:user"]
    required_by: [":freshrss"]
    extends: [":utils:user-in-group"]
    environment:
      USER_NAME: freshrss
      GROUP_NAME: data

  vpn-wireguard:
    required_by: [wireguard]
    requires: [vpn]
    labels:
      discover: "true"
    script: |
      set -x
      cp "${STATE_DIR}/vpn/config/vault/wg0.conf" /etc/wireguard/wg0.conf
      chown root:root /etc/wireguard/wg0.conf
      chmod 600 /etc/wireguard/wg0.conf
    when:
      check_fails: test -f /etc/wireguard/wg0.conf
      output_changes: cat "${STATE_DIR}/vpn/config/vault/wg0.conf"
