services:
  app:
    image: ghcr.io/sirikon/venue:20241215_214834
    restart: always
    user: ${VENUE_USER_ID}
    env_file: venue.env
    environment:
      VENUE_DB_HOST: db
      VENUE_WORKERS: 2
      VENUE_THREADS: 2
    volumes:
      - ./data/app:/w
    ports:
      - 127.0.0.1:8080:80
    depends_on:
      app-migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy
        restart: true
  app-migrate:
    image: ghcr.io/sirikon/venue:20241215_214834
    user: ${VENUE_USER_ID}
    command: ["venue-migrate"]
    env_file: venue.env
    environment:
      VENUE_DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: venue
      POSTGRES_USER: venue
      POSTGRES_PASSWORD: venue
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 1s
      start_interval: 1s
      start_period: 30s
      retries: 100
